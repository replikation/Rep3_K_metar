options(repos = c(CRAN = "http://cran.rstudio.com"))
if (!require(remotes)) { install.packages("remotes") }
remotes::install_github("fbreitwieser/pavian")
pavian::runApp(port=5000)
pavian::runApp(port=5000)
source("https://bioconductor.org/biocLite.R")
biocLite("Rsamtools")
pavian::runApp(port=5000)
sudopavian::runApp(port=5000)
sudo pavian::runApp(port=5000)
biocLite("RCurl")
biocLite("Rsamtools")
source("https://bioconductor.org/biocLite.R")
biocLite("Rsamtools")
biocLite("Rsamtools")
pavian::runApp(port=5000)
pavian::runApp(port=5000)
install.packages("timevis")
install.packages("devtools")
library(timevis)
library(timevis)
data <- data.frame(
id      = 1:4,
content = c("Item one"  , "Item two"  ,"Ranged item", "Item four"),
start   = c("2016-01-10", "2016-01-11", "2016-01-20", "2016-02-14 15:00:00"),
end     = c(NA          ,           NA, "2016-02-04", NA)
)
timevis(data)
install.packages("vistime")
dat <- data.frame(Position=rep(c("President", "Vice"), each = 3),
Name = c("Washington", rep(c("Adams", "Jefferson"), 2), "Burr"),
start = c("1789-03-29", "1797-02-03", "1801-02-03"),
end = c("1797-02-03", "1801-02-03", "1809-02-03"),
color = c('#cbb69d', '#603913', '#c69c6e'),
fontcolor = c("black", "white", "black"))
vistime(dat, events="Position", groups="Name", title="Presidents of the USA")
install.packages("plotly")
install.packages("vistime")
install.packages("vistime")
install.packages("hexbin")
source("https://bioconductor.org/biocLite.R")
biocLite("ggtree")
ggtree
biocLite("treeio")
biocLite("ggplot2")
ggtree
ggtree ()
ggtree()
ggtree(help)
help(ggtree)
??ggtree
biocLite("ggtree")
source("https://bioconductor.org/biocLite.R")
biocLite("ggtree")
biocLite("llapack")
ggtree(help)
help(ggtree)
## ----style, echo=FALSE, results="asis", message=FALSE--------------------
knitr::opts_chunk$set(tidy = FALSE,
message = FALSE)
## ----echo=FALSE----------------------------------------------------------
CRANpkg <- function (pkg) {
cran <- "https://CRAN.R-project.org/package"
fmt <- "[%s](%s=%s)"
sprintf(fmt, pkg, cran, pkg)
}
Biocpkg <- function (pkg) {
sprintf("[%s](http://bioconductor.org/packages/%s)", pkg, pkg)
}
## ----treeman, echo=FALSE, out.extra='', message=FALSE--------------------
treeman <- matrix(c(
"collapse", "collapse a selecting clade",
"expand", "expand collapsed clade",
"flip", "exchange position of 2 clades that share a parent node",
"groupClade", "grouping clades",
"groupOTU", "grouping OTUs by tracing back to most recent common ancestor",
"identify", "interactive tree manipulation",
"rotate", "rotating a selected clade by 180 degree",
"rotate_tree", "rotating circular layout tree by specific angle",
"scaleClade", "zoom in or zoom out selecting clade",
"open_tree", "convert a tree to fan layout by specific open angle"
), ncol=2, byrow=TRUE)
treeman <- as.data.frame(treeman)
colnames(treeman) <- c("Function", "Descriptiotn")
knitr::kable(treeman, caption = "Tree manipulation functions.", booktabs = T)
## ----geoms, echo=FALSE, message=FALSE------------------------------------
geoms <- matrix(c(
"geom_balance", "highlights the two direct descendant clades of an internal node",
"geom_cladelabel", "annotate a clade with bar and text label",
"geom_cladelabel2", "annotate a clade with bar and text label for unrooted layout",
"geom_hilight", "highlight a clade with rectangle",
"geom_hilight_encircle", "highlight a clade with xspline for unrooted layout",
"geom_label2", "modified version of geom_label, with subsetting supported",
"geom_nodelab", "layer for node labels, which can be text or image",
"geom_nodepoint", "annotate internal nodes with symbolic points",
"geom_point2", "modified version of geom_point, with subsetting supported",
"geom_range", "bar layer to present uncertainty of evolutionary inference",
"geom_rootpoint", "annotate root node with symbolic point",
"geom_segment2", "modified version of geom_segment, with subsetting supported",
"geom_strip", "annotate associated taxa with bar and (optional) text label",
"geom_taxalink", "associate two related taxa by linking them with a curve",
"geom_text2", "modified version of geom_text, with subsetting supported",
"geom_tiplab", "layer of tip labels, which can be text or image",
"geom_tiplab2", "layer of tip labels for circular layout",
"geom_tippoint", "annotate external nodes with symbolic points",
"geom_tree", "tree structure layer, with multiple layout supported",
"geom_treescale", "tree branch scale legend"
), ncol=2, byrow=TRUE)
geoms <- as.data.frame(geoms)
colnames(geoms) <- c("Layer", "Description")
knitr::kable(geoms, caption = "Geom layers defined in ggtree.", booktabs = T)
## ----echo=FALSE----------------------------------------------------------
sessionInfo()
library("treeio")
library("ggtree")
library("ggtree")
library("ape")
library("Biostrings")
library("ggplot2")
View(geoms)
View(geoms)
nwk <- system.file("extdata", "1494ASseq.nwk", package="ggtree")
tree
ggtree(tree)
nwk <- system.file("extdata", "/home/christian/Work_projects/Rep3_K_metar/phylo/1494ASseq.nwk", package="ggtree")
1+2
tree <- read.tree(nwk)
library("ape")
library("Biostrings")
library("ggplot2")
library("ggtree")
nwk <- system.file("extdata", "/home/christian/Work_projects/Rep3_K_metar/phylo/1494ASseq.nwk", package="ggtree")
tree <- read.tree(nwk)
help("system.file")
#Help here: https://rpubs.com/crazyhottommy/heatmap_demystified
library(dplyr)
library(tidyr)
library(ggplot2)
library(RColorBrewer)
library(ggthemes)
#change according to install location
setwd("~/Work_projects/Rep3_K_metar/genefeatures")
## read table
mut.tidy <- read.table("gentable.csv", sep=";", header = TRUE)
## set heatmap value as factor (so each gets one colour)
g <- sapply(mut.tidy, is.integer)
mut.tidy[g] <- lapply(mut.tidy[g], as.factor)
# plotting
gg <- ggplot(mut.tidy, aes(y=sample, x=gene, fill=mutated)) + geom_tile(color="white", size=0.5)
#gg <- gg + coord_equal()
#gg <- gg + labs(x="genes", y="plasmid type", title="Genmap of KPC plasmids")
gg <- gg + labs(x="", y="Plasmid type")
gg <- gg + theme_hc()
gg <- gg + theme(axis.text.x=element_text(angle = 270, vjust=0.5, hjust = 0))
gg <- gg + theme(legend.position="none")
gg <- gg + scale_fill_manual(values=c("#eaeaea", "#5D737E", "#CC8B86", "#7FC6A4", "#4a42e5"))
gg <- gg + facet_grid(year ~ label, scales = "free", space = "free")
gg
#Help here: https://rpubs.com/crazyhottommy/heatmap_demystified
library(dplyr)
library(tidyr)
library(ggplot2)
library(RColorBrewer)
library(ggthemes)
#change according to install location
setwd("~/Work_projects/Rep3_K_metar/genefeatures")
## read table
mut.tidy <- read.table("gentable.csv", sep=";", header = TRUE)
## set heatmap value as factor (so each gets one colour)
g <- sapply(mut.tidy, is.integer)
mut.tidy[g] <- lapply(mut.tidy[g], as.factor)
# plotting
gg <- ggplot(mut.tidy, aes(y=sample, x=gene, fill=mutated)) + geom_tile(color="white", size=0.5)
#gg <- gg + coord_equal()
#gg <- gg + labs(x="genes", y="plasmid type", title="Genmap of KPC plasmids")
gg <- gg + labs(x="", y="Plasmid type")
gg <- gg + theme_hc()
gg <- gg + theme(axis.text.x=element_text(angle = 270, vjust=0.5, hjust = 0))
gg <- gg + theme(legend.position="none")
gg <- gg + scale_fill_manual(values=c("#eaeaea", "#5D737E", "#CC8B86", "#7FC6A4", "#4a42e5"))
gg <- gg + facet_grid(year ~ label, scales = "free", space = "free")
gg
#Help here: https://rpubs.com/crazyhottommy/heatmap_demystified
library(dplyr)
library(tidyr)
library(ggplot2)
library(RColorBrewer)
library(ggthemes)
#change according to install location
setwd("~/Work_projects/Rep3_K_metar/genefeatures")
## read table
mut.tidy <- read.table("gentable.csv", sep=";", header = TRUE)
## set heatmap value as factor (so each gets one colour)
g <- sapply(mut.tidy, is.integer)
mut.tidy[g] <- lapply(mut.tidy[g], as.factor)
# plotting
gg <- ggplot(mut.tidy, aes(y=sample, x=gene, fill=mutated)) + geom_tile(color="white", size=0.5)
#gg <- gg + coord_equal()
#gg <- gg + labs(x="genes", y="plasmid type", title="Genmap of KPC plasmids")
gg <- gg + labs(x="", y="Plasmid type")
gg <- gg + theme_hc()
gg <- gg + theme(axis.text.x=element_text(angle = 270, vjust=0.5, hjust = 0))
gg <- gg + theme(legend.position="none")
gg <- gg + scale_fill_manual(values=c("#eaeaea", "#5D737E", "#CC8B86", "#7FC6A4", "#4a42e5"))
gg <- gg + facet_grid(year ~ label, scales = "free", space = "free")
gg
gg <- gg + scale_fill_manual(values=c("#eaeaea", "#5D737E", "#CC8B86", "#7FC6A4", "#4a42e5", "#521945"))
gg <- gg + facet_grid(year ~ label, scales = "free", space = "free")
gg
## read table
mut.tidy <- read.table("gentable.csv", sep=";", header = TRUE)
## set heatmap value as factor (so each gets one colour)
g <- sapply(mut.tidy, is.integer)
mut.tidy[g] <- lapply(mut.tidy[g], as.factor)
# plotting
gg <- ggplot(mut.tidy, aes(y=sample, x=gene, fill=mutated)) + geom_tile(color="white", size=0.5)
#gg <- gg + coord_equal()
#gg <- gg + labs(x="genes", y="plasmid type", title="Genmap of KPC plasmids")
gg <- gg + labs(x="", y="Plasmid type")
gg <- gg + theme_hc()
gg <- gg + theme(axis.text.x=element_text(angle = 270, vjust=0.5, hjust = 0))
gg <- gg + theme(legend.position="none")
gg <- gg + scale_fill_manual(values=c("#eaeaea", "#5D737E", "#CC8B86", "#7FC6A4", "#4a42e5", "#815777"))
gg <- gg + facet_grid(year ~ label, scales = "free", space = "free")
gg
#change according to install location
setwd("~/Work_projects/Rep3_K_metar/genefeatures")
## read table
mut.tidy <- read.table("gentable.csv", sep=";", header = TRUE)
## set heatmap value as factor (so each gets one colour)
g <- sapply(mut.tidy, is.integer)
mut.tidy[g] <- lapply(mut.tidy[g], as.factor)
# plotting
gg <- ggplot(mut.tidy, aes(y=sample, x=gene, fill=mutated)) + geom_tile(color="white", size=0.5)
#gg <- gg + coord_equal()
#gg <- gg + labs(x="genes", y="plasmid type", title="Genmap of KPC plasmids")
gg <- gg + labs(x="", y="Plasmid type")
gg <- gg + theme_hc()
gg <- gg + theme(axis.text.x=element_text(angle = 270, vjust=0.5, hjust = 0))
gg <- gg + theme(legend.position="none")
gg <- gg + scale_fill_manual(values=c("#eaeaea", "#5D737E", "#CC8B86", "#7FC6A4", "#4a42e5", "#815777"))
gg <- gg + facet_grid(year ~ label, scales = "free", space = "free")
gg
#Help here: https://rpubs.com/crazyhottommy/heatmap_demystified
library(dplyr)
library(tidyr)
library(ggplot2)
library(RColorBrewer)
library(ggthemes)
#change according to install location
setwd("~/Work_projects/Rep3_K_metar/genefeatures")
## read table
mut.tidy <- read.table("gentable.csv", sep=";", header = TRUE)
## set heatmap value as factor (so each gets one colour)
g <- sapply(mut.tidy, is.integer)
mut.tidy[g] <- lapply(mut.tidy[g], as.factor)
# plotting
gg <- ggplot(mut.tidy, aes(y=sample, x=gene, fill=mutated)) + geom_tile(color="white", size=0.5)
#gg <- gg + coord_equal()
#gg <- gg + labs(x="genes", y="plasmid type", title="Genmap of KPC plasmids")
gg <- gg + labs(x="", y="Plasmid type")
gg <- gg + theme_hc()
gg <- gg + theme(axis.text.x=element_text(angle = 270, vjust=0.5, hjust = 0))
gg <- gg + theme(legend.position="none")
gg <- gg + scale_fill_manual(values=c("#eaeaea", "#5D737E", "#CC8B86", "#7FC6A4", "#4a42e5", "#815777"))
gg <- gg + facet_grid(year ~ label, scales = "free", space = "free")
gg
#change according to install location
setwd("~/Work_projects/Rep3_K_metar/genefeatures")
## read table
mut.tidy <- read.table("gentable.csv", sep=";", header = TRUE)
## set heatmap value as factor (so each gets one colour)
g <- sapply(mut.tidy, is.integer)
mut.tidy[g] <- lapply(mut.tidy[g], as.factor)
# plotting
gg <- ggplot(mut.tidy, aes(y=sample, x=gene, fill=mutated)) + geom_tile(color="white", size=0.5)
#gg <- gg + coord_equal()
#gg <- gg + labs(x="genes", y="plasmid type", title="Genmap of KPC plasmids")
gg <- gg + labs(x="", y="Plasmid type")
gg <- gg + theme_hc()
gg <- gg + theme(axis.text.x=element_text(angle = 270, vjust=0.5, hjust = 0))
gg <- gg + theme(legend.position="none")
gg <- gg + scale_fill_manual(values=c("#eaeaea", "#5D737E", "#CC8B86", "#7FC6A4", "#4a42e5", "#815777"))
gg <- gg + facet_grid(year ~ label, scales = "free", space = "free")
gg
#change according to install location
setwd("~/Work_projects/Rep3_K_metar/genefeatures")
## read table
mut.tidy <- read.table("gentable.csv", sep=";", header = TRUE)
## set heatmap value as factor (so each gets one colour)
g <- sapply(mut.tidy, is.integer)
mut.tidy[g] <- lapply(mut.tidy[g], as.factor)
# plotting
gg <- ggplot(mut.tidy, aes(y=sample, x=gene, fill=mutated)) + geom_tile(color="white", size=0.5)
#gg <- gg + coord_equal()
#gg <- gg + labs(x="genes", y="plasmid type", title="Genmap of KPC plasmids")
gg <- gg + labs(x="", y="Plasmid type")
gg <- gg + theme_hc()
gg <- gg + theme(axis.text.x=element_text(angle = 270, vjust=0.5, hjust = 0))
gg <- gg + theme(legend.position="none")
gg <- gg + scale_fill_manual(values=c("#eaeaea", "#5D737E", "#CC8B86", "#7FC6A4", "#4a42e5", "#815777"))
gg <- gg + facet_grid(year ~ label, scales = "free", space = "free")
gg
## read table
mut.tidy <- read.table("gentable.csv", sep=";", header = TRUE)
## set heatmap value as factor (so each gets one colour)
g <- sapply(mut.tidy, is.integer)
mut.tidy[g] <- lapply(mut.tidy[g], as.factor)
# plotting
gg <- ggplot(mut.tidy, aes(y=sample, x=gene, fill=mutated)) + geom_tile(color="white", size=0.5)
#gg <- gg + coord_equal()
#gg <- gg + labs(x="genes", y="plasmid type", title="Genmap of KPC plasmids")
gg <- gg + labs(x="", y="Plasmid type")
gg <- gg + theme_hc()
gg <- gg + theme(axis.text.x=element_text(angle = 270, vjust=0.5, hjust = 0))
gg <- gg + theme(legend.position="none")
gg <- gg + scale_fill_manual(values=c("#eaeaea", "#5D737E", "#CC8B86", "#7FC6A4", "#4a42e5", "#815777"))
gg <- gg + facet_grid(year ~ label, scales = "free", space = "free")
gg
#change according to install location
setwd("~/Work_projects/Rep3_K_metar/genefeatures")
## read table
mut.tidy <- read.table("gentable.csv", sep=";", header = TRUE)
## set heatmap value as factor (so each gets one colour)
g <- sapply(mut.tidy, is.integer)
mut.tidy[g] <- lapply(mut.tidy[g], as.factor)
# plotting
gg <- ggplot(mut.tidy, aes(y=sample, x=gene, fill=mutated)) + geom_tile(color="white", size=0.5)
#gg <- gg + coord_equal()
#gg <- gg + labs(x="genes", y="plasmid type", title="Genmap of KPC plasmids")
gg <- gg + labs(x="", y="Plasmid type")
gg <- gg + theme_hc()
gg <- gg + theme(axis.text.x=element_text(angle = 270, vjust=0.5, hjust = 0))
gg <- gg + theme(legend.position="none")
gg <- gg + scale_fill_manual(values=c("#eaeaea", "#5D737E", "#CC8B86", "#7FC6A4", "#4a42e5", "#815777"))
gg <- gg + facet_grid(year ~ label, scales = "free", space = "free")
gg
## read table
mut.tidy <- read.table("gentable.csv", sep=";", header = TRUE)
## set heatmap value as factor (so each gets one colour)
g <- sapply(mut.tidy, is.integer)
mut.tidy[g] <- lapply(mut.tidy[g], as.factor)
# plotting
gg <- ggplot(mut.tidy, aes(y=sample, x=gene, fill=mutated)) + geom_tile(color="white", size=0.5)
#gg <- gg + coord_equal()
#gg <- gg + labs(x="genes", y="plasmid type", title="Genmap of KPC plasmids")
gg <- gg + labs(x="", y="Plasmid type")
gg <- gg + theme_hc()
gg <- gg + theme(axis.text.x=element_text(angle = 270, vjust=0.5, hjust = 0))
gg <- gg + theme(legend.position="none")
gg <- gg + scale_fill_manual(values=c("#eaeaea", "#5D737E", "#CC8B86", "#7FC6A4", "#4a42e5", "#815777"))
gg <- gg + facet_grid(year ~ label, scales = "free", space = "free")
gg
#change according to install location
setwd("~/Work_projects/Rep3_K_metar/genefeatures")
## read table
mut.tidy <- read.table("gentable.csv", sep=";", header = TRUE)
## set heatmap value as factor (so each gets one colour)
g <- sapply(mut.tidy, is.integer)
mut.tidy[g] <- lapply(mut.tidy[g], as.factor)
# plotting
gg <- ggplot(mut.tidy, aes(y=sample, x=gene, fill=mutated)) + geom_tile(color="white", size=0.5)
#gg <- gg + coord_equal()
#gg <- gg + labs(x="genes", y="plasmid type", title="Genmap of KPC plasmids")
gg <- gg + labs(x="", y="Plasmid type")
gg <- gg + theme_hc()
gg <- gg + theme(axis.text.x=element_text(angle = 270, vjust=0.5, hjust = 0))
gg <- gg + theme(legend.position="none")
gg <- gg + scale_fill_manual(values=c("#eaeaea", "#5D737E", "#CC8B86", "#7FC6A4", "#4a42e5", "#815777"))
gg <- gg + facet_grid(year ~ label, scales = "free", space = "free")
gg
